// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package student

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Student struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	IdCard               *IDCard  `protobuf:"bytes,3,opt,name=idCard" json:"idCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{0}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Student) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Student) GetIdCard() *IDCard {
	if m != nil {
		return m.IdCard
	}
	return nil
}

type IDCard struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDCard) Reset()         { *m = IDCard{} }
func (m *IDCard) String() string { return proto.CompactTextString(m) }
func (*IDCard) ProtoMessage()    {}
func (*IDCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{1}
}

func (m *IDCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDCard.Unmarshal(m, b)
}
func (m *IDCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDCard.Marshal(b, m, deterministic)
}
func (m *IDCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDCard.Merge(m, src)
}
func (m *IDCard) XXX_Size() int {
	return xxx_messageInfo_IDCard.Size(m)
}
func (m *IDCard) XXX_DiscardUnknown() {
	xxx_messageInfo_IDCard.DiscardUnknown(m)
}

var xxx_messageInfo_IDCard proto.InternalMessageInfo

func (m *IDCard) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Student)(nil), "student.Student")
	proto.RegisterType((*IDCard)(nil), "student.IDCard")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_2141552de9bf11d0) }

var fileDescriptor_2141552de9bf11d0 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x2e, 0x29, 0x4d, 0x49, 0xcd,
	0x2b, 0x51, 0x0a, 0xe3, 0x62, 0x0f, 0x86, 0x30, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18,
	0x15, 0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x75, 0x2e, 0xb6, 0xcc, 0x14, 0xe7,
	0xc4, 0xa2, 0x14, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x7e, 0x3d, 0xa8, 0x41, 0x7a, 0x9e,
	0x2e, 0x20, 0xe1, 0x20, 0xa8, 0xb4, 0x92, 0x04, 0x17, 0x1b, 0x44, 0x04, 0xdd, 0x58, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5c, 0x5d, 0x12, 0x6d, 0x89, 0x00, 0x00, 0x00,
}
